#!/usr/bin/env php
<?php

ini_set("memory_limit", -1);
set_time_limit(0);


/**
 *
 * Alright, this code sucks, but it only really needs to be run once a year,
 * so doing by hand is not really a problem.
 *
 * This requires the database dumps for US callsigns.  These are *large* pipe 
 * delimited text files. This will attempt to download them, but chances are you'll
 * need to do this by yourself.
 * 
 * US Callsign Database:
 *   Info: https://www.fcc.gov/uls/transactions/daily-weekly
 *   Link: https://data.fcc.gov/download/pub/uls/complete/l_amat.zip
 * 
 * The fields are defined in this document: 
 *   https://www.fcc.gov/sites/default/files/public_access_database_definitions_v9_0.pdf
 *
 * Last time I ran it, it took up about six gig of memory, so keep that in mind.
 * The count of the records is printed as a comment at the top so you can check
 * with the import.
 *
 */
const FCC_URL = 'https://data.fcc.gov/download/pub/uls/complete/l_amat.zip';

$opt = @getopt("o:");
$work = $opt["o"];

if (!(is_writable($work) && is_dir($work))) {
	dye("callbookgen:  callbookgen -o /work/work");
}

$curl = trim(`command -v curl`);
if ($curl == "") {
	$curl = null;
	echo "NOTE: no curl found.  Can't download by hand.\n";
}

$output = fopen("$work/callbook.sql", "w");
if ($output === false) dye("can't open output file");
fwrite($output, "TRUNCATE fdcallbook;\n");


if (!file_exists("$work/l_amat.zip")) {
	echo "# Downloading FCC data...\n";
	system(sprintf("%s -o %s %s", $curl, $work.'/l_amat.zip', FCC_URL));
}

echo "# Unzipping FCC Data...\n";
mkdir("$work/fcc");
if (!unzip("$work/l_amat.zip", "$work/fcc"))
	dye("couldn't update FCC data");

echo "# Loading FCC data...\n";
$en = fccparse("$work/fcc/EN.dat");
$hd = fccparse("$work/fcc/HD.dat");
$am = fccparse("$work/fcc/AM.dat");

/* NOTE THIS IS THE PART THAT DOES THE ACTUAL FCC PARSING.
 * EVERYTHING BEFORE THIS WAS JUST BS
 */

echo "# Parsing FCC Data...\n";
$subqueries = [];

foreach ($hd as $idx=>$hdline) {
	if ($hdline[3] != 'A') continue;


	$call = $en[$idx][2];
	$name = ($am[$idx][6] == "") ? $en[$idx][6] . ' ' . $en[$idx][8] : $en[$idx][5];
	$city = $en[$idx][14];
	$state = $en[$idx][15];

	$subqueries[] = sprintf(
		"\t('%s', '%s', '%s', '%s')",
		$call,
		addslashes($name),
		addslashes($city),
		strtoupper($state)
	);

}

echo "# Writing FCC Queries...\n";
printf("Total Number of Active US Calls: %d\n", count($subqueries));

fwrite($output, sprintf("/* Total Number of Active US Calls: %d */\n", count($subqueries)));

foreach (array_chunk($subqueries, 1000) as $part) {
	fwrite($output, "INSERT INTO fdcallbook(csign, name, city, state) VALUES\n");
	fwrite($output, join(",\n", $part));
	fwrite($output, ";\n\n");
}

unset($subqueries);



/**
 * And now begins the canadian section.
 *
 * This code sucks marginally less than the US code, but only because CA does more
 * sensible database dumps, so there's far less to load and check.
 *
 * Canadian Callsign Database:
 * 	 Info: https://www.ic.gc.ca/eic/site/025.nsf/eng/h_00004.html
 *	 Link: https://apc-cap.ic.gc.ca/datafiles/amateur_delim.zip
 * 
 * As with the US callsign dumper, it will print the total number of records
 * in a comment at the top.
 *
 * The first line was a record name list, this is what it looked like:
 *
 *[0] => Array
        (
            [0] => callsign
            [1] => first_name
            [2] => surname
            [3] => address_line
            [4] => city
            [5] => prov_cd
            [6] => postal_code
            [7] => qual_a
            [8] => qual_b
            [9] => qual_c
            [10] => qual_d
            [11] => qual_e
            [12] => club_name
            [13] => club_name_2
            [14] => club_address
            [15] => club_city
            [16] => club_prov_cd
            [17] => club_postal_code
        ) 
 */

const CA_URL = 'https://apc-cap.ic.gc.ca/datafiles/amateur_delim.zip';


if (!file_exists("$work/amateur_delim.zip")) {
	echo "# Downloading CA data...\n";
	system(sprintf("%s -o %s %s", $curl, $work.'/amateur_delim.zip', CA_URL));
}


echo "# Unzipping CA Data...\n";
mkdir("$work/ca");
if (!unzip("$work/amateur_delim.zip", "$work/ca"))
	dye("couldn't update CA data");

echo "# Loading CA Data...\n";
$raw = explode("\n", trim(file_get_contents("$work/ca/amateur_delim.txt")));
array_shift($raw);

if (count($raw) == 0) dye("didn't load CA data");
echo "# Parsing CA Data...\n";
$subqueries = [];

foreach ($raw as $r) {
	$rec = explode(";", trim($r));

	$call = $rec[0];

	if ($rec[12] == "") {
		$name = $rec[1] . ' ' . $rec[2];
		$city = $rec[4];
		$state = $rec[5];
	} else {
		$name = $rec[12];
		$city = $rec[15];
		$state = $rec[16];
	}

	$subqueries[] = sprintf(
		"\t('%s', '%s', '%s', '%s')",
		$call,
		addslashes($name),
		addslashes($city),
		strtoupper($state)
	);

}

echo "# Writing CA Data...\n";
printf("Total Number of Active CA Calls: %d\n", count($subqueries));

fwrite($output, sprintf("/* Total Number of Active CA Calls: %d */\n", count($subqueries)));

foreach (array_chunk($subqueries, 1000) as $part) {
	fwrite($output, "INSERT INTO fdcallbook(csign, name, city, state) VALUES\n");
	fwrite($output, join(",\n", $part));
	fwrite($output, ";\n\n");
}

fclose($output);
echo "# Done. The callbook SQL is in $work/callbook.sql\n\n";

/* Helper functions */
function dye(string $err, int $exit = 1) {
	echo "$err\n";
	exit($exit);
}


function unzip(string $file, string $dir): bool {
	$zip = new ZipArchive();
	$zip->open($file, ZipArchive::RDONLY);
	return $zip->extractTo($dir);

}


function fccparse(string $filename): array {

	if (!file_exists($filename)) dye("couldn't find $filename");
	$ret = [];
	foreach (explode("\n", trim(file_get_contents($filename))) as $line) {
		$values = explode("|", $line);
		array_shift($values); // file type
		$id = array_shift($values);
		$ret[$id] = $values;
	}

	return $ret;

}
